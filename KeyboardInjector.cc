#include "KeyboardInjector.h"

#include <iostream>
#include <map>
#include <memory.h>
#include <stdlib.h>
#include <string>
#include <unistd.h>

#define MAP_FIELD(x) m_keyMap.emplace(#x, x);

KeyboardInjector::~KeyboardInjector()
{
  if (m_uidev)
    libevdev_uinput_destroy(m_uidev);
  if (m_dev)
    libevdev_free(m_dev);
}

bool KeyboardInjector::Init()
{
  if (m_dev)
    return false;

  m_dev = libevdev_new();
  libevdev_set_name(m_dev, "Keyboard Loopback Simulation Device");

  libevdev_enable_event_type(m_dev, EV_KEY);
  for (unsigned int i=KEY_ESC; i < KEY_CNT; ++i)
    libevdev_enable_event_code(m_dev, EV_KEY, i, NULL);

  MAP_FIELD(KEY_ESC)
  MAP_FIELD(KEY_1)
  MAP_FIELD(KEY_2)
  MAP_FIELD(KEY_3)
  MAP_FIELD(KEY_4)
  MAP_FIELD(KEY_5)
  MAP_FIELD(KEY_6)
  MAP_FIELD(KEY_7)
  MAP_FIELD(KEY_8)
  MAP_FIELD(KEY_9)
  MAP_FIELD(KEY_0)
  MAP_FIELD(KEY_MINUS)
  MAP_FIELD(KEY_EQUAL)
  MAP_FIELD(KEY_BACKSPACE)
  MAP_FIELD(KEY_TAB)
  MAP_FIELD(KEY_Q)
  MAP_FIELD(KEY_W)
  MAP_FIELD(KEY_E)
  MAP_FIELD(KEY_R)
  MAP_FIELD(KEY_T)
  MAP_FIELD(KEY_Y)
  MAP_FIELD(KEY_U)
  MAP_FIELD(KEY_I)
  MAP_FIELD(KEY_O)
  MAP_FIELD(KEY_P)
  MAP_FIELD(KEY_LEFTBRACE)
  MAP_FIELD(KEY_RIGHTBRACE)
  MAP_FIELD(KEY_ENTER)
  MAP_FIELD(KEY_LEFTCTRL)
  MAP_FIELD(KEY_A)
  MAP_FIELD(KEY_S)
  MAP_FIELD(KEY_D)
  MAP_FIELD(KEY_F)
  MAP_FIELD(KEY_G)
  MAP_FIELD(KEY_H)
  MAP_FIELD(KEY_J)
  MAP_FIELD(KEY_K)
  MAP_FIELD(KEY_L)
  MAP_FIELD(KEY_SEMICOLON)
  MAP_FIELD(KEY_APOSTROPHE)
  MAP_FIELD(KEY_GRAVE)
  MAP_FIELD(KEY_LEFTSHIFT)
  MAP_FIELD(KEY_BACKSLASH)
  MAP_FIELD(KEY_Z)
  MAP_FIELD(KEY_X)
  MAP_FIELD(KEY_C)
  MAP_FIELD(KEY_V)
  MAP_FIELD(KEY_B)
  MAP_FIELD(KEY_N)
  MAP_FIELD(KEY_M)
  MAP_FIELD(KEY_COMMA)
  MAP_FIELD(KEY_DOT)
  MAP_FIELD(KEY_SLASH)
  MAP_FIELD(KEY_RIGHTSHIFT)
  MAP_FIELD(KEY_KPASTERISK)
  MAP_FIELD(KEY_LEFTALT)
  MAP_FIELD(KEY_SPACE)
  MAP_FIELD(KEY_CAPSLOCK)
  MAP_FIELD(KEY_F1)
  MAP_FIELD(KEY_F2)
  MAP_FIELD(KEY_F3)
  MAP_FIELD(KEY_F4)
  MAP_FIELD(KEY_F5)
  MAP_FIELD(KEY_F6)
  MAP_FIELD(KEY_F7)
  MAP_FIELD(KEY_F8)
  MAP_FIELD(KEY_F9)
  MAP_FIELD(KEY_F10)
  MAP_FIELD(KEY_NUMLOCK)
  MAP_FIELD(KEY_SCROLLLOCK)
  MAP_FIELD(KEY_KP7)
  MAP_FIELD(KEY_KP8)
  MAP_FIELD(KEY_KP9)
  MAP_FIELD(KEY_KPMINUS)
  MAP_FIELD(KEY_KP4)
  MAP_FIELD(KEY_KP5)
  MAP_FIELD(KEY_KP6)
  MAP_FIELD(KEY_KPPLUS)
  MAP_FIELD(KEY_KP1)
  MAP_FIELD(KEY_KP2)
  MAP_FIELD(KEY_KP3)
  MAP_FIELD(KEY_KP0)
  MAP_FIELD(KEY_KPDOT)

  MAP_FIELD(KEY_ZENKAKUHANKAKU)
  MAP_FIELD(KEY_102ND)
  MAP_FIELD(KEY_F11)
  MAP_FIELD(KEY_F12)
  MAP_FIELD(KEY_RO)
  MAP_FIELD(KEY_KATAKANA)
  MAP_FIELD(KEY_HIRAGANA)
  MAP_FIELD(KEY_HENKAN)
  MAP_FIELD(KEY_KATAKANAHIRAGANA)
  MAP_FIELD(KEY_MUHENKAN)
  MAP_FIELD(KEY_KPJPCOMMA)
  MAP_FIELD(KEY_KPENTER)
  MAP_FIELD(KEY_RIGHTCTRL)
  MAP_FIELD(KEY_KPSLASH)
  MAP_FIELD(KEY_SYSRQ)
  MAP_FIELD(KEY_RIGHTALT)
  MAP_FIELD(KEY_LINEFEED)
  MAP_FIELD(KEY_HOME)
  MAP_FIELD(KEY_UP)
  MAP_FIELD(KEY_PAGEUP)
  MAP_FIELD(KEY_LEFT)
  MAP_FIELD(KEY_RIGHT)
  MAP_FIELD(KEY_END)
  MAP_FIELD(KEY_DOWN)
  MAP_FIELD(KEY_PAGEDOWN)
  MAP_FIELD(KEY_INSERT)
  MAP_FIELD(KEY_DELETE)
  MAP_FIELD(KEY_MACRO)
  MAP_FIELD(KEY_MUTE)
  MAP_FIELD(KEY_VOLUMEDOWN)
  MAP_FIELD(KEY_VOLUMEUP)
  MAP_FIELD(KEY_POWER)
  MAP_FIELD(KEY_KPEQUAL)
  MAP_FIELD(KEY_KPPLUSMINUS)
  MAP_FIELD(KEY_PAUSE)
  MAP_FIELD(KEY_SCALE)

  MAP_FIELD(KEY_KPCOMMA)
  MAP_FIELD(KEY_HANGEUL)
  MAP_FIELD(KEY_HANGUEL)
  MAP_FIELD(KEY_HANJA)
  MAP_FIELD(KEY_YEN)
  MAP_FIELD(KEY_LEFTMETA)
  MAP_FIELD(KEY_RIGHTMETA)
  MAP_FIELD(KEY_COMPOSE)

  MAP_FIELD(KEY_STOP)
  MAP_FIELD(KEY_AGAIN)
  MAP_FIELD(KEY_PROPS)
  MAP_FIELD(KEY_UNDO)
  MAP_FIELD(KEY_FRONT)
  MAP_FIELD(KEY_COPY)
  MAP_FIELD(KEY_OPEN)
  MAP_FIELD(KEY_PASTE)
  MAP_FIELD(KEY_FIND)
  MAP_FIELD(KEY_CUT)
  MAP_FIELD(KEY_HELP)
  MAP_FIELD(KEY_MENU)
  MAP_FIELD(KEY_CALC)
  MAP_FIELD(KEY_SETUP)
  MAP_FIELD(KEY_SLEEP)
  MAP_FIELD(KEY_WAKEUP)
  MAP_FIELD(KEY_FILE)
  MAP_FIELD(KEY_SENDFILE)
  MAP_FIELD(KEY_DELETEFILE)
  MAP_FIELD(KEY_XFER)
  MAP_FIELD(KEY_PROG1)
  MAP_FIELD(KEY_PROG2)
  MAP_FIELD(KEY_WWW)
  MAP_FIELD(KEY_MSDOS)
  MAP_FIELD(KEY_COFFEE)
  MAP_FIELD(KEY_SCREENLOCK)
  MAP_FIELD(KEY_DIRECTION)
  MAP_FIELD(KEY_CYCLEWINDOWS)
  MAP_FIELD(KEY_MAIL)
  MAP_FIELD(KEY_BOOKMARKS)
  MAP_FIELD(KEY_COMPUTER)
  MAP_FIELD(KEY_BACK)
  MAP_FIELD(KEY_FORWARD)
  MAP_FIELD(KEY_CLOSECD)
  MAP_FIELD(KEY_EJECTCD)
  MAP_FIELD(KEY_EJECTCLOSECD)
  MAP_FIELD(KEY_NEXTSONG)
  MAP_FIELD(KEY_PLAYPAUSE)
  MAP_FIELD(KEY_PREVIOUSSONG)
  MAP_FIELD(KEY_STOPCD)
  MAP_FIELD(KEY_RECORD)
  MAP_FIELD(KEY_REWIND)
  MAP_FIELD(KEY_PHONE)
  MAP_FIELD(KEY_ISO)
  MAP_FIELD(KEY_CONFIG)
  MAP_FIELD(KEY_HOMEPAGE)
  MAP_FIELD(KEY_REFRESH)
  MAP_FIELD(KEY_EXIT)
  MAP_FIELD(KEY_MOVE)
  MAP_FIELD(KEY_EDIT)
  MAP_FIELD(KEY_SCROLLUP)
  MAP_FIELD(KEY_SCROLLDOWN)
  MAP_FIELD(KEY_KPLEFTPAREN)
  MAP_FIELD(KEY_KPRIGHTPAREN)
  MAP_FIELD(KEY_NEW)
  MAP_FIELD(KEY_REDO)

  MAP_FIELD(KEY_F13)
  MAP_FIELD(KEY_F14)
  MAP_FIELD(KEY_F15)
  MAP_FIELD(KEY_F16)
  MAP_FIELD(KEY_F17)
  MAP_FIELD(KEY_F18)
  MAP_FIELD(KEY_F19)
  MAP_FIELD(KEY_F20)
  MAP_FIELD(KEY_F21)
  MAP_FIELD(KEY_F22)
  MAP_FIELD(KEY_F23)
  MAP_FIELD(KEY_F24)

  MAP_FIELD(KEY_PLAYCD)
  MAP_FIELD(KEY_PAUSECD)
  MAP_FIELD(KEY_PROG3)
  MAP_FIELD(KEY_PROG4)
  MAP_FIELD(KEY_DASHBOARD)
  MAP_FIELD(KEY_SUSPEND)
  MAP_FIELD(KEY_CLOSE)
  MAP_FIELD(KEY_PLAY)
  MAP_FIELD(KEY_FASTFORWARD)
  MAP_FIELD(KEY_BASSBOOST)
  MAP_FIELD(KEY_PRINT)
  MAP_FIELD(KEY_HP)
  MAP_FIELD(KEY_CAMERA)
  MAP_FIELD(KEY_SOUND)
  MAP_FIELD(KEY_QUESTION)
  MAP_FIELD(KEY_EMAIL)
  MAP_FIELD(KEY_CHAT)
  MAP_FIELD(KEY_SEARCH)
  MAP_FIELD(KEY_CONNECT)
  MAP_FIELD(KEY_FINANCE)
  MAP_FIELD(KEY_SPORT)
  MAP_FIELD(KEY_SHOP)
  MAP_FIELD(KEY_ALTERASE)
  MAP_FIELD(KEY_CANCEL)
  MAP_FIELD(KEY_BRIGHTNESSDOWN)
  MAP_FIELD(KEY_BRIGHTNESSUP)
  MAP_FIELD(KEY_MEDIA)

  MAP_FIELD(KEY_SWITCHVIDEOMODE)
  MAP_FIELD(KEY_KBDILLUMTOGGLE)
  MAP_FIELD(KEY_KBDILLUMDOWN)
  MAP_FIELD(KEY_KBDILLUMUP)

  MAP_FIELD(KEY_SEND)
  MAP_FIELD(KEY_REPLY)
  MAP_FIELD(KEY_FORWARDMAIL)
  MAP_FIELD(KEY_SAVE)
  MAP_FIELD(KEY_DOCUMENTS)

  MAP_FIELD(KEY_BATTERY)

  MAP_FIELD(KEY_BLUETOOTH)
  MAP_FIELD(KEY_WLAN)
  MAP_FIELD(KEY_UWB)

  MAP_FIELD(KEY_UNKNOWN)

  MAP_FIELD(KEY_VIDEO_NEXT)
  MAP_FIELD(KEY_VIDEO_PREV)
  MAP_FIELD(KEY_BRIGHTNESS_CYCLE)
  MAP_FIELD(KEY_BRIGHTNESS_ZERO)
  MAP_FIELD(KEY_DISPLAY_OFF)

  MAP_FIELD(KEY_WWAN)
  MAP_FIELD(KEY_WIMAX)
  MAP_FIELD(KEY_RFKILL)

  MAP_FIELD(KEY_MICMUTE)

  MAP_FIELD(BTN_MISC)
  MAP_FIELD(BTN_0)
  MAP_FIELD(BTN_1)
  MAP_FIELD(BTN_2)
  MAP_FIELD(BTN_3)
  MAP_FIELD(BTN_4)
  MAP_FIELD(BTN_5)
  MAP_FIELD(BTN_6)
  MAP_FIELD(BTN_7)
  MAP_FIELD(BTN_8)
  MAP_FIELD(BTN_9)

  MAP_FIELD(BTN_MOUSE)
  MAP_FIELD(BTN_LEFT)
  MAP_FIELD(BTN_RIGHT)
  MAP_FIELD(BTN_MIDDLE)
  MAP_FIELD(BTN_SIDE)
  MAP_FIELD(BTN_EXTRA)
  MAP_FIELD(BTN_FORWARD)
  MAP_FIELD(BTN_BACK)
  MAP_FIELD(BTN_TASK)

  MAP_FIELD(BTN_JOYSTICK)
  MAP_FIELD(BTN_TRIGGER)
  MAP_FIELD(BTN_THUMB)
  MAP_FIELD(BTN_THUMB2)
  MAP_FIELD(BTN_TOP)
  MAP_FIELD(BTN_TOP2)
  MAP_FIELD(BTN_PINKIE)
  MAP_FIELD(BTN_BASE)
  MAP_FIELD(BTN_BASE2)
  MAP_FIELD(BTN_BASE3)
  MAP_FIELD(BTN_BASE4)
  MAP_FIELD(BTN_BASE5)
  MAP_FIELD(BTN_BASE6)
  MAP_FIELD(BTN_DEAD)

  MAP_FIELD(BTN_GAMEPAD)
  MAP_FIELD(BTN_SOUTH)
  MAP_FIELD(BTN_A)
  MAP_FIELD(BTN_EAST)
  MAP_FIELD(BTN_B)
  MAP_FIELD(BTN_C)
  MAP_FIELD(BTN_NORTH)
  MAP_FIELD(BTN_X)
  MAP_FIELD(BTN_WEST)
  MAP_FIELD(BTN_Y)
  MAP_FIELD(BTN_Z)
  MAP_FIELD(BTN_TL)
  MAP_FIELD(BTN_TR)
  MAP_FIELD(BTN_TL2)
  MAP_FIELD(BTN_TR2)
  MAP_FIELD(BTN_SELECT)
  MAP_FIELD(BTN_START)
  MAP_FIELD(BTN_MODE)
  MAP_FIELD(BTN_THUMBL)
  MAP_FIELD(BTN_THUMBR)

  MAP_FIELD(BTN_DIGI)
  MAP_FIELD(BTN_TOOL_PEN)
  MAP_FIELD(BTN_TOOL_RUBBER)
  MAP_FIELD(BTN_TOOL_BRUSH)
  MAP_FIELD(BTN_TOOL_PENCIL)
  MAP_FIELD(BTN_TOOL_AIRBRUSH)
  MAP_FIELD(BTN_TOOL_FINGER)
  MAP_FIELD(BTN_TOOL_MOUSE)
  MAP_FIELD(BTN_TOOL_LENS)
  MAP_FIELD(BTN_TOOL_QUINTTAP)
  MAP_FIELD(BTN_TOUCH)
  MAP_FIELD(BTN_STYLUS)
  MAP_FIELD(BTN_STYLUS2)
  MAP_FIELD(BTN_TOOL_DOUBLETAP)
  MAP_FIELD(BTN_TOOL_TRIPLETAP)
  MAP_FIELD(BTN_TOOL_QUADTAP)

  MAP_FIELD(BTN_WHEEL)
  MAP_FIELD(BTN_GEAR_DOWN)
  MAP_FIELD(BTN_GEAR_UP)

  MAP_FIELD(KEY_OK)
  MAP_FIELD(KEY_SELECT)
  MAP_FIELD(KEY_GOTO)
  MAP_FIELD(KEY_CLEAR)
  MAP_FIELD(KEY_POWER2)
  MAP_FIELD(KEY_OPTION)
  MAP_FIELD(KEY_INFO)
  MAP_FIELD(KEY_TIME)
  MAP_FIELD(KEY_VENDOR)
  MAP_FIELD(KEY_ARCHIVE)
  MAP_FIELD(KEY_PROGRAM)
  MAP_FIELD(KEY_CHANNEL)
  MAP_FIELD(KEY_FAVORITES)
  MAP_FIELD(KEY_EPG)
  MAP_FIELD(KEY_PVR)
  MAP_FIELD(KEY_MHP)
  MAP_FIELD(KEY_LANGUAGE)
  MAP_FIELD(KEY_TITLE)
  MAP_FIELD(KEY_SUBTITLE)
  MAP_FIELD(KEY_ANGLE)
  MAP_FIELD(KEY_ZOOM)
  MAP_FIELD(KEY_MODE)
  MAP_FIELD(KEY_KEYBOARD)
  MAP_FIELD(KEY_SCREEN)
  MAP_FIELD(KEY_PC)
  MAP_FIELD(KEY_TV)
  MAP_FIELD(KEY_TV2)
  MAP_FIELD(KEY_VCR)
  MAP_FIELD(KEY_VCR2)
  MAP_FIELD(KEY_SAT)
  MAP_FIELD(KEY_SAT2)
  MAP_FIELD(KEY_CD)
  MAP_FIELD(KEY_TAPE)
  MAP_FIELD(KEY_RADIO)
  MAP_FIELD(KEY_TUNER)
  MAP_FIELD(KEY_PLAYER)
  MAP_FIELD(KEY_TEXT)
  MAP_FIELD(KEY_DVD)
  MAP_FIELD(KEY_AUX)
  MAP_FIELD(KEY_MP3)
  MAP_FIELD(KEY_AUDIO)
  MAP_FIELD(KEY_VIDEO)
  MAP_FIELD(KEY_DIRECTORY)
  MAP_FIELD(KEY_LIST)
  MAP_FIELD(KEY_MEMO)
  MAP_FIELD(KEY_CALENDAR)
  MAP_FIELD(KEY_RED)
  MAP_FIELD(KEY_GREEN)
  MAP_FIELD(KEY_YELLOW)
  MAP_FIELD(KEY_BLUE)
  MAP_FIELD(KEY_CHANNELUP)
  MAP_FIELD(KEY_CHANNELDOWN)
  MAP_FIELD(KEY_FIRST)
  MAP_FIELD(KEY_LAST)
  MAP_FIELD(KEY_AB)
  MAP_FIELD(KEY_NEXT)
  MAP_FIELD(KEY_RESTART)
  MAP_FIELD(KEY_SLOW)
  MAP_FIELD(KEY_SHUFFLE)
  MAP_FIELD(KEY_BREAK)
  MAP_FIELD(KEY_PREVIOUS)
  MAP_FIELD(KEY_DIGITS)
  MAP_FIELD(KEY_TEEN)
  MAP_FIELD(KEY_TWEN)
  MAP_FIELD(KEY_VIDEOPHONE)
  MAP_FIELD(KEY_GAMES)
  MAP_FIELD(KEY_ZOOMIN)
  MAP_FIELD(KEY_ZOOMOUT)
  MAP_FIELD(KEY_ZOOMRESET)
  MAP_FIELD(KEY_WORDPROCESSOR)
  MAP_FIELD(KEY_EDITOR)
  MAP_FIELD(KEY_SPREADSHEET)
  MAP_FIELD(KEY_GRAPHICSEDITOR)
  MAP_FIELD(KEY_PRESENTATION)
  MAP_FIELD(KEY_DATABASE)
  MAP_FIELD(KEY_NEWS)
  MAP_FIELD(KEY_VOICEMAIL)
  MAP_FIELD(KEY_ADDRESSBOOK)
  MAP_FIELD(KEY_MESSENGER)
  MAP_FIELD(KEY_DISPLAYTOGGLE)
  MAP_FIELD(KEY_SPELLCHECK)
  MAP_FIELD(KEY_LOGOFF)

  MAP_FIELD(KEY_DOLLAR)
  MAP_FIELD(KEY_EURO)

  MAP_FIELD(KEY_FRAMEBACK)
  MAP_FIELD(KEY_FRAMEFORWARD)
  MAP_FIELD(KEY_CONTEXT_MENU)
  MAP_FIELD(KEY_MEDIA_REPEAT)
  MAP_FIELD(KEY_10CHANNELSUP)
  MAP_FIELD(KEY_10CHANNELSDOWN)
  MAP_FIELD(KEY_IMAGES)

  MAP_FIELD(KEY_DEL_EOL)
  MAP_FIELD(KEY_DEL_EOS)
  MAP_FIELD(KEY_INS_LINE)
  MAP_FIELD(KEY_DEL_LINE)

  MAP_FIELD(KEY_FN)
  MAP_FIELD(KEY_FN_ESC)
  MAP_FIELD(KEY_FN_F1)
  MAP_FIELD(KEY_FN_F2)
  MAP_FIELD(KEY_FN_F3)
  MAP_FIELD(KEY_FN_F4)
  MAP_FIELD(KEY_FN_F5)
  MAP_FIELD(KEY_FN_F6)
  MAP_FIELD(KEY_FN_F7)
  MAP_FIELD(KEY_FN_F8)
  MAP_FIELD(KEY_FN_F9)
  MAP_FIELD(KEY_FN_F10)
  MAP_FIELD(KEY_FN_F11)
  MAP_FIELD(KEY_FN_F12)
  MAP_FIELD(KEY_FN_1)
  MAP_FIELD(KEY_FN_2)
  MAP_FIELD(KEY_FN_D)
  MAP_FIELD(KEY_FN_E)
  MAP_FIELD(KEY_FN_F)
  MAP_FIELD(KEY_FN_S)
  MAP_FIELD(KEY_FN_B)

  MAP_FIELD(KEY_BRL_DOT1)
  MAP_FIELD(KEY_BRL_DOT2)
  MAP_FIELD(KEY_BRL_DOT3)
  MAP_FIELD(KEY_BRL_DOT4)
  MAP_FIELD(KEY_BRL_DOT5)
  MAP_FIELD(KEY_BRL_DOT6)
  MAP_FIELD(KEY_BRL_DOT7)
  MAP_FIELD(KEY_BRL_DOT8)
  MAP_FIELD(KEY_BRL_DOT9)
  MAP_FIELD(KEY_BRL_DOT10)

  MAP_FIELD(KEY_NUMERIC_0)
  MAP_FIELD(KEY_NUMERIC_1)
  MAP_FIELD(KEY_NUMERIC_2)
  MAP_FIELD(KEY_NUMERIC_3)
  MAP_FIELD(KEY_NUMERIC_4)
  MAP_FIELD(KEY_NUMERIC_5)
  MAP_FIELD(KEY_NUMERIC_6)
  MAP_FIELD(KEY_NUMERIC_7)
  MAP_FIELD(KEY_NUMERIC_8)
  MAP_FIELD(KEY_NUMERIC_9)
  MAP_FIELD(KEY_NUMERIC_STAR)
  MAP_FIELD(KEY_NUMERIC_POUND)

  MAP_FIELD(KEY_CAMERA_FOCUS)
  MAP_FIELD(KEY_WPS_BUTTON)

  MAP_FIELD(KEY_TOUCHPAD_TOGGLE)
  MAP_FIELD(KEY_TOUCHPAD_ON)
  MAP_FIELD(KEY_TOUCHPAD_OFF)

  MAP_FIELD(KEY_CAMERA_ZOOMIN)
  MAP_FIELD(KEY_CAMERA_ZOOMOUT)
  MAP_FIELD(KEY_CAMERA_UP)
  MAP_FIELD(KEY_CAMERA_DOWN)
  MAP_FIELD(KEY_CAMERA_LEFT)
  MAP_FIELD(KEY_CAMERA_RIGHT)

  MAP_FIELD(KEY_ATTENDANT_ON)
  MAP_FIELD(KEY_ATTENDANT_OFF)
  MAP_FIELD(KEY_ATTENDANT_TOGGLE)
  MAP_FIELD(KEY_LIGHTS_TOGGLE)

  MAP_FIELD(BTN_DPAD_UP)
  MAP_FIELD(BTN_DPAD_DOWN)
  MAP_FIELD(BTN_DPAD_LEFT)
  MAP_FIELD(BTN_DPAD_RIGHT)

  MAP_FIELD(KEY_ALS_TOGGLE)

  MAP_FIELD(BTN_TRIGGER_HAPPY)
  MAP_FIELD(BTN_TRIGGER_HAPPY1)
  MAP_FIELD(BTN_TRIGGER_HAPPY2)
  MAP_FIELD(BTN_TRIGGER_HAPPY3)
  MAP_FIELD(BTN_TRIGGER_HAPPY4)
  MAP_FIELD(BTN_TRIGGER_HAPPY5)
  MAP_FIELD(BTN_TRIGGER_HAPPY6)
  MAP_FIELD(BTN_TRIGGER_HAPPY7)
  MAP_FIELD(BTN_TRIGGER_HAPPY8)
  MAP_FIELD(BTN_TRIGGER_HAPPY9)
  MAP_FIELD(BTN_TRIGGER_HAPPY10)
  MAP_FIELD(BTN_TRIGGER_HAPPY11)
  MAP_FIELD(BTN_TRIGGER_HAPPY12)
  MAP_FIELD(BTN_TRIGGER_HAPPY13)
  MAP_FIELD(BTN_TRIGGER_HAPPY14)
  MAP_FIELD(BTN_TRIGGER_HAPPY15)
  MAP_FIELD(BTN_TRIGGER_HAPPY16)
  MAP_FIELD(BTN_TRIGGER_HAPPY17)
  MAP_FIELD(BTN_TRIGGER_HAPPY18)
  MAP_FIELD(BTN_TRIGGER_HAPPY19)
  MAP_FIELD(BTN_TRIGGER_HAPPY20)
  MAP_FIELD(BTN_TRIGGER_HAPPY21)
  MAP_FIELD(BTN_TRIGGER_HAPPY22)
  MAP_FIELD(BTN_TRIGGER_HAPPY23)
  MAP_FIELD(BTN_TRIGGER_HAPPY24)
  MAP_FIELD(BTN_TRIGGER_HAPPY25)
  MAP_FIELD(BTN_TRIGGER_HAPPY26)
  MAP_FIELD(BTN_TRIGGER_HAPPY27)
  MAP_FIELD(BTN_TRIGGER_HAPPY28)
  MAP_FIELD(BTN_TRIGGER_HAPPY29)
  MAP_FIELD(BTN_TRIGGER_HAPPY30)
  MAP_FIELD(BTN_TRIGGER_HAPPY31)
  MAP_FIELD(BTN_TRIGGER_HAPPY32)
  MAP_FIELD(BTN_TRIGGER_HAPPY33)
  MAP_FIELD(BTN_TRIGGER_HAPPY34)
  MAP_FIELD(BTN_TRIGGER_HAPPY35)
  MAP_FIELD(BTN_TRIGGER_HAPPY36)
  MAP_FIELD(BTN_TRIGGER_HAPPY37)
  MAP_FIELD(BTN_TRIGGER_HAPPY38)
  MAP_FIELD(BTN_TRIGGER_HAPPY39)
  MAP_FIELD(BTN_TRIGGER_HAPPY40)
  MAP_FIELD(KEY_MIN_INTERESTING)
  MAP_FIELD(KEY_MAX)

  return libevdev_uinput_create_from_device(m_dev,
            LIBEVDEV_UINPUT_OPEN_MANAGED,
            &m_uidev) == 0;
}

void KeyboardInjector::Run()
{
  unsigned int code = 0;
  char command[1024];
  char codeStr[1024];
  std::string line;
  while(std::getline(std::cin, line)) {
    if (line.length() >= sizeof(command) ||
        sscanf(line.c_str(), "%s %s", command, codeStr) != 2)
      break;
    code = strtoul(codeStr, NULL, 0);
    if (errno == ERANGE) code = 0;
    if (!ProcessCommand(command, code, codeStr))
      break;
  }
}

bool KeyboardInjector::ProcessCommand(const char* command, unsigned int code, const char* codeStr)
{
  if (strcmp(command, "sleep") == 0) {
    usleep(code);
    return true;
  } else if (strcmp(command, "sleepms") == 0) {
    usleep(code * 1000);
    return true;
  } else if (strcmp(command, "up") == 0 ||
             strcmp(command, "down") == 0) {
    if (code == 0) {
      KeyMap::const_iterator it = m_keyMap.find(codeStr);
      if (it != m_keyMap.end()) {
        code = it->second;
      } else {
        fprintf(stderr, "Failed to find key mapping for %s\n", codeStr);
        return false;
      }
    }

    libevdev_uinput_write_event(m_uidev, EV_KEY, code, command[0] == 'd');
    libevdev_uinput_write_event(m_uidev, EV_SYN, SYN_REPORT, 0);
    return true;
  }
  fprintf(stderr, "Invalid command %s\n", command);
  return false;
}



